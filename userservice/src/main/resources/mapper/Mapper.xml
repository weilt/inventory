<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weilt.userservice.mapper.UserMapper">
    <select id="selectById" parameterType="int" resultType="com.weilt.commonentity.entity.User">
     select id,user_name,password,email,phone,question,answer,role,create_time,update_time from eshop_user where id = #{userId};
  </select>

    <select id="checkUserName" resultType="int" parameterType="string">
       select count(1) from eshop_user where user_name = #{userName};
    </select>

    <select id="checkEmail" resultType="int" parameterType="string">
           select count(1) from eshop_user where email = #{email};
        </select>


    <select id="selectLogin" resultType="com.weilt.commonentity.entity.User">
         select id,user_name,password,email,phone,question,role,create_time,update_time from eshop_user
         where user_name = #{userName} and password = #{password};
    </select>
    <select id="selectQuestionByUserName" resultType="string" parameterType="string">
               select question from eshop_user
               where user_name = #{userName};
      </select>


    <select id="checkAnswer" resultType="int" parameterType="map">
                     select count(1) from eshop_user
                     where user_name = #{userName}
                     and question = #{question}
                     and answer = #{answer};
            </select>


    <update id="updatePasswordByUserName" parameterType="map">
            update eshop_user set password = #{password},
                                  update_time = now()
             where user_name = #{userName};

      </update>


    <select id="checkPassword" resultType="int" parameterType="map">
             select count(1) from eshop_user where id = #{userId} and password=#{password};
    </select>


    <update id="updateByIdSelective" parameterType="com.weilt.commonentity.entity.User">
        update eshop_user
        <set>
            <if test="userName != null">
                user_name=#{userName,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="password != null">
                password=#{password,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="phone != null">
                phone=#{phone,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="email != null">
                email=#{email,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="question != null">
                question=#{question,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="answer != null">
                answer=#{answer,jdbcType=VARCHAR},
            </if>
        </set>
        <set>
            <if test="role != null">
                role=#{role,jdbcType=INTEGER},
            </if>
        </set>
        <set>
            <if test="updateTime != null">
                update_time=now()
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.weilt.commonentity.entity.User">
        UPDATE eshop_user set user_name = #{userName},
                               password = #{password},
                               phone = #{phone},
                               email = #{email},
                               question=#{question},
                               answer = #{answer},
                               role = #{role},
                               update_time = #{updateTime}
                               where id = #{id};
    </update>
    <select id="checkEmailByUserId" resultType="int" parameterType="map">
      select count(1) from eshop_user where email = #{email} and id != #{userId};
</select>

    <insert id="addUser" parameterType="com.weilt.commonentity.entity.User">
        Insert into eshop_user(user_name,password,phone,email,question,answer,role,create_time,update_time)
                     values (#{userName},#{password},#{phone},#{email},#{question},#{answer},#{role},now(),now());
    </insert>
</mapper>